top(n: int = typer.Argument('número de vagas'),
    export: bool = typer.Option(False, "--export", "-e", help="Exportar os resultados para um arquivo CSV")):

python jobscli.py top 10 -e



search(location: str = typer.Argument('nome do distrito'), 
        company_name: str = typer.Argument('nome da empresa'), 
        n: int = typer.Argument('número de vagas'),
        export: bool = typer.Option(False, "--export", "-e", help="Exportar os resultados para um arquivo CSV")):

python jobscli.py search Lisboa "akapeople" 10 -e




company(company_name: str = typer.Argument('ID ou nome', help='Nome ou ID da empresa'),
        export: bool = typer.Option(False, "--export", "-e", help="Exportar os resultados para um arquivo CSV")):

python jobscli.py company akapeople




def locality(district: str = typer.Argument('nome do distrito', help='Nome ou ID da localidade que deseja pesquisar a vaga'),
            export: bool = typer.Option(False, "--export", "-e", help="Exportar os resultados para um arquivo CSV")):

python jobscli.py locality Braga -e




def salary(job_id: int = typer.Argument('Número inteiro', help='ID da vaga para pesquisa de salários.')):

> python jobscli.py salary "492083"




def skills(skills: list[str] = typer.Argument(help='Skills que deseja pesquisar, apenas separadas por vírgulas'), 
           start_date: str = typer.Argument('dd-mm-aaaa', help='Data inicial da pesquisa'), 
           end_date: str = typer.Argument('dd-mm-aaaa', help='Data final da pesquisa'),
           export: bool = typer.Option(False, "--export", "-e", help="Exportar os resultados para um arquivo CSV")):


python jobscli.py skills "sql","comunicação" 2024/10/31 2024/12/23 -e




def contract(locality: str = typer.Argument(help='Nome do distrito'), 
             contract: str = typer.Argument(help='Tipo de contrato que deseja pesquisar'),
             export: bool = typer.Option(False, "--export", "-e", help="Exportar os resultados para um arquivo CSV")):

python jobscli.py contract "braga" "contrato a termo" -e



search_role(zone: str, job_title: str, 
            export: bool = typer.Option(False, "--export", "-e", help="Exportar os resultados para um arquivo CSV")):

python jobscli.py search_role Braga "Fullstack" -e

